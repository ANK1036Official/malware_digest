import sys
import os
import shutil
import pathlib
import ntpath
import hashlib
import ssdeep
import pymongo
import urllib.parse

# Mongo creds
# Ensure you change the local IP to YOUR local IP hosting the MongoDB session.

username = urllib.parse.quote_plus('mal_digest')
password = urllib.parse.quote_plus('PASSWORD_HERE')
mongo_client = pymongo.MongoClient(f"mongodb://{username}:{password}@192.168.1.29:27017/malware")
db_name = mongo_client["malware"]
db_col = db_name["malware_info"]

try:
	file_mal = sys.argv[1]
except:
	pass
if len(sys.argv) < 2:
	file_mal = input('Enter path to file: ')


with open(file_mal, 'rb') as file_st:
	## Cryptographic
	file_bytes = file_st.read()
	file_md5 = hashlib.md5(file_bytes).hexdigest()
	file_sha1 = hashlib.sha1(file_bytes).hexdigest()
	file_sha256 = hashlib.sha256(file_bytes).hexdigest()
	## Fuzzy Hashes
	file_ssdeep = ssdeep.hash(file_bytes)
	## DB creation
	dict_db = { "file_name": file_mal, "md5": file_md5, "sha1": file_sha1, "sha256": file_sha256, "ssdeep": file_ssdeep }
	data_conf = db_col.insert_one(dict_db)
	print(f"""
MD5:    {file_md5}
SHA1:   {file_sha1}
SHA256: {file_sha256}
ssdeep: {file_ssdeep}

Confirmation ID: {data_conf.inserted_id}
""")
	## Logic functions
	file_name_str = ntpath.basename(file_mal)
	file_ext = pathlib.Path(file_mal).suffix.replace('.', '')
	if not os.path.exists(file_ext):
		os.makedirs(file_ext)
	new_filename = f"{file_ext}/{file_sha1}.bin"
	shutil.copy2(file_mal, new_filename)
	print(f"Successfully copied {file_mal} to {new_filename}\n")
